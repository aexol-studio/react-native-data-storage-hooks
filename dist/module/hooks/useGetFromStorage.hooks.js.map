{"version":3,"sources":["useGetFromStorage.hooks.ts"],"names":["AsyncStorage","useEffect","useState","useGetFromStorage","key","value","setValue","checkValue","valueFromStorage","getItem","JSON","parse"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,GAAD,IAAiB;AAChD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,EAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,UAAU,GAAG,YAAY;AAC7B,YAAMC,gBAAgB,GAAG,MAAMR,YAAY,CAACS,OAAb,CAAqBL,GAArB,CAA/B;;AACA,UAAII,gBAAgB,KAAK,IAAzB,EAA+B;AAC7BF,QAAAA,QAAQ,CAACI,IAAI,CAACC,KAAL,CAAWH,gBAAX,CAAD,CAAR;AACD,OAFD,MAEO;AACLF,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,KAPD;;AAQAC,IAAAA,UAAU,GATI,CAUd;AACD,GAXQ,EAWN,EAXM,CAAT;AAaA,SAAOF,KAAP;AACD,CAjBM","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport {useEffect, useState} from 'react';\n\nexport const useGetFromStorage = (key: string) => {\n  const [value, setValue] = useState<any>();\n\n  useEffect(() => {\n    const checkValue = async () => {\n      const valueFromStorage = await AsyncStorage.getItem(key);\n      if (valueFromStorage !== null) {\n        setValue(JSON.parse(valueFromStorage));\n      } else {\n        setValue(null);\n      }\n    };\n    checkValue();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return value;\n};\n"]}