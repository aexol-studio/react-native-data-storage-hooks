{"version":3,"sources":["useSetMultipleValues.hook.ts"],"names":["AsyncStorage","useState","useGetWholeStorage","useSetMultipleValues","storedValues","setStoredValues","refreshValues","setValues","newValues","valuesToStore","Function","length","forEach","el","setItem","JSON","stringify","error","console","log"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,kBAAR,QAAiC,SAAjC;AAEA,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AACxC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAE9C,EAF8C,CAAhD;AAGA,QAAM,GAAGK,aAAH,IAAoBJ,kBAAkB,EAA5C;;AAEA,QAAMK,SAAS,GACbC,SADgB,IAEb;AACH,QAAI;AACFF,MAAAA,aAAa;AACb,YAAMG,aAAa,GACjBD,SAAS,YAAYE,QAArB,GAAgCF,SAAS,CAACJ,YAAD,CAAzC,GAA0DI,SAD5D;AAEAH,MAAAA,eAAe,CAACI,aAAD,CAAf;;AACA,UAAID,SAAS,CAACG,MAAV,GAAmB,CAAvB,EAA0B;AACxBH,QAAAA,SAAS,CAACI,OAAV,CAAkB,MAAMC,EAAN,IAAY;AAC5B,cAAIA,EAAE,CAACF,MAAH,GAAY,CAAZ,IAAiB,OAAOE,EAAE,CAAC,CAAD,CAAT,KAAiB,QAAtC,EAAgD;AAC9C,kBAAMb,YAAY,CAACc,OAAb,CAAqBD,EAAE,CAAC,CAAD,CAAvB,EAA4BE,IAAI,CAACC,SAAL,CAAeH,EAAE,CAAC,CAAD,CAAjB,CAA5B,CAAN;AACD;AACF,SAJD;AAKD;AACF,KAZD,CAYE,OAAOI,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAlBD;;AAoBA,SAAO,CAACb,YAAD,EAAeG,SAAf,CAAP;AACD,CA3BM","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport {useState} from 'react';\r\nimport {useGetWholeStorage} from './index';\r\n\r\nexport const useSetMultipleValues = () => {\r\n  const [storedValues, setStoredValues] = useState<\r\n    [string, string | number | object | Array<any>][]\r\n  >([]);\r\n  const [, refreshValues] = useGetWholeStorage();\r\n\r\n  const setValues = (\r\n    newValues: [string, string | number | object | Array<any>][],\r\n  ) => {\r\n    try {\r\n      refreshValues();\r\n      const valuesToStore =\r\n        newValues instanceof Function ? newValues(storedValues) : newValues;\r\n      setStoredValues(valuesToStore);\r\n      if (newValues.length > 0) {\r\n        newValues.forEach(async el => {\r\n          if (el.length > 0 && typeof el[0] === 'string') {\r\n            await AsyncStorage.setItem(el[0], JSON.stringify(el[1]));\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValues, setValues];\r\n};\r\n"]}