{"version":3,"sources":["useGetWholeStorage.hooks.ts"],"names":["AsyncStorage","useEffect","useState","useGetWholeStorage","values","setValues","refresh","_setRefresh","refreshValues","checkStorage","asyncValues","asyncKeys","getAllKeys","length","forEach","el","valueFromAsync","getItem","newArray","JSON","parse","push"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,EAApC;AACA,QAAM,CAACI,OAAD,EAAUC,WAAV,IAAyBL,QAAQ,CAAU,KAAV,CAAvC;;AAEA,QAAMM,aAAyB,GAAG,MAAM;AACtCD,IAAAA,WAAW,CAAC,CAACD,OAAF,CAAX;AACD,GAFD;;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,YAAY,GAAG,YAAY;AAC/B,UAAIC,WAAoB,GAAG,EAA3B;AACA,YAAMC,SAAS,GAAG,MAAMX,YAAY,CAACY,UAAb,EAAxB;;AACA,UAAID,SAAS,CAACE,MAAV,GAAmB,CAAvB,EAA0B;AACxBF,QAAAA,SAAS,CAACG,OAAV,CAAkB,MAAOC,EAAP,IAAsB;AACtC,gBAAMC,cAAc,GAAG,MAAMhB,YAAY,CAACiB,OAAb,CAAqBF,EAArB,CAA7B;;AACA,cAAIC,cAAJ,EAAoB;AAClB,gBAAIE,QAAQ,GAAG,CAACH,EAAD,EAAKI,IAAI,CAACC,KAAL,CAAWJ,cAAX,CAAL,CAAf;AACAN,YAAAA,WAAW,CAACW,IAAZ,CAAiBH,QAAjB;AACD;;AACDb,UAAAA,SAAS,CAACK,WAAD,CAAT;AACD,SAPD;AAQD;AACF,KAbD;;AAcAD,IAAAA,YAAY;AACb,GAhBQ,EAgBN,CAACH,OAAD,CAhBM,CAAT;AAkBA,SAAO,CAACF,MAAD,EAASI,aAAT,CAAP;AACD,CA3BM","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport {useEffect, useState} from 'react';\n\nexport const useGetWholeStorage = () => {\n  const [values, setValues] = useState<any[][]>();\n  const [refresh, _setRefresh] = useState<boolean>(false);\n\n  const refreshValues: () => void = () => {\n    _setRefresh(!refresh);\n  };\n\n  useEffect(() => {\n    const checkStorage = async () => {\n      let asyncValues: any[][] = [];\n      const asyncKeys = await AsyncStorage.getAllKeys();\n      if (asyncKeys.length > 0) {\n        asyncKeys.forEach(async (el: string) => {\n          const valueFromAsync = await AsyncStorage.getItem(el);\n          if (valueFromAsync) {\n            let newArray = [el, JSON.parse(valueFromAsync)];\n            asyncValues.push(newArray);\n          }\n          setValues(asyncValues);\n        });\n      }\n    };\n    checkStorage();\n  }, [refresh]);\n\n  return [values, refreshValues] as const;\n};\n"]}